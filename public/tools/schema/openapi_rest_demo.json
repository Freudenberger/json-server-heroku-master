{
    "openapi": "3.0.1",
    "info": {
        "title": "REST demo",
        "description": "This is a sample REST serverform jaktestowac.pl .",
        "termsOfService": "http://jaktestowac.pl/",
        "version": "1.0.0"
    },
    "externalDocs": {
        "description": "Find out more about Swagger",
        "url": "http://swagger.io"
    },
    "servers": [
        {
            "url": "http://localhost:3000/api"
        }
    ],
    "tags": [
        {
            "name": "articles",
            "description": "Articles (blog entries) with lot of contents"
        },
        {
            "name": "users",
            "description": "Users"
        },
        {
            "name": "comments",
            "description": "Comments"
        },
        {
            "name": "other",
            "description": "Other operations"
        }
    ],
    "paths": {
        "/articles": {
            "get": {
                "tags": [
                    "articles"
                ],
                "summary": "Get articles",
                "operationId": "getArticles",
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Article"
                                }
                            }
                        }
                    }
                },
                "x-codegen-request-body-name": "date"
            },
            "post": {
                "tags": [
                    "articles"
                ],
                "summary": "Add article",
                "operationId": "postArticle",
                "requestBody": {
                    "description": "Date of creation",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Article"
                            }
                        }
                    },
                    "required": false
                },
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Article"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Invalid article supplied",
                        "content": {}
                    }
                },
                "x-codegen-request-body-name": "date"
            }
        },
        "/articles/{id}": {
            "get": {
                "tags": [
                    "articles"
                ],
                "summary": "Find article by ID",
                "description": "Returns a single article",
                "operationId": "getArticleById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of article to return",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Article"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Article not found",
                        "content": {}
                    }
                }
            },
            "put": {
                "tags": [
                    "articles"
                ],
                "summary": "Updates an article",
                "description": "Updates an article.",
                "operationId": "putArticle",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of article that need to be updated",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Updated article object",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ArticleUpdate"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Article updated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Article"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Article not found",
                        "content": {}
                    },
                    "422": {
                        "description": "Invalid article supplied",
                        "content": {}
                    }
                }
            },
            "patch": {
                "tags": [
                    "articles"
                ],
                "summary": "Updates an article",
                "description": "Updates an article.",
                "operationId": "patchArticle",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of article that need to be updated",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Updated article object",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ArticleUpdate"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Article updated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Article"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Article not found",
                        "content": {}
                    },
                    "422": {
                        "description": "Invalid article supplied",
                        "content": {}
                    }
                }
            },
            "delete": {
                "tags": [
                    "articles"
                ],
                "summary": "Deletes a article",
                "operationId": "deleteArticle",
                "parameters": [
                    {
                        "name": "api_key",
                        "in": "header",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Article id to delete",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Article deleted",
                        "content": {}
                    },
                    "404": {
                        "description": "Article not found",
                        "content": {}
                    }
                }
            },
            "head": {
                "tags": [
                    "articles"
                ],
                "summary": "Info about article",
                "operationId": "headArticle",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of article to return",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "400": {
                        "description": "Invalid ID supplied",
                        "content": {}
                    },
                    "404": {
                        "description": "Article not found",
                        "content": {}
                    }
                }
            }
        },
        "/users": {
            "get": {
                "tags": [
                    "users"
                ],
                "summary": "Get users",
                "description": "This can only be done by the logged in user.",
                "operationId": "getUsers",
                "responses": {
                    "default": {
                        "description": "successful operation",
                        "content": {}
                    }
                },
                "x-codegen-request-body-name": "body"
            },
            "post": {
                "tags": [
                    "users"
                ],
                "summary": "Create user",
                "description": "This can only be done by the logged in user.",
                "operationId": "postUser",
                "requestBody": {
                    "description": "Created user object",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/User"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Users"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Invalid user email",
                        "content": {}
                    },
                    "422": {
                        "description": "Invalid user supplied",
                        "content": {}
                    }
                },
                "x-codegen-request-body-name": "body"
            }
        },
        "/users/{id}": {
            "get": {
                "tags": [
                    "users"
                ],
                "summary": "Find User by ID",
                "description": "Returns a single user",
                "operationId": "getUserById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of User to return",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid user id supplied",
                        "content": {}
                    },
                    "404": {
                        "description": "User not found",
                        "content": {}
                    }
                }
            },
            "put": {
                "tags": [
                    "users"
                ],
                "summary": "Updates user",
                "description": "Updates user.",
                "operationId": "putUser",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of user that need to be updated",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Updated user object",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UserUpdate"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "User updated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "content": {}
                    },
                    "422": {
                        "description": "Invalid user supplied",
                        "content": {}
                    }
                }
            },
            "patch": {
                "tags": [
                    "users"
                ],
                "summary": "Updates user",
                "description": "Updates user.",
                "operationId": "patchUser",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of user that need to be updated",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Updated user object",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UserUpdate"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "User updated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "content": {}
                    },
                    "422": {
                        "description": "Invalid user supplied",
                        "content": {}
                    }
                }
            },
            "delete": {
                "tags": [
                    "users"
                ],
                "summary": "Deletes a user",
                "operationId": "deleteUser",
                "parameters": [
                    {
                        "name": "api_key",
                        "in": "header",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "User id to delete",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User deleted",
                        "content": {}
                    },
                    "404": {
                        "description": "User not found",
                        "content": {}
                    }
                }
            },
            "head": {
                "tags": [
                    "users"
                ],
                "summary": "Info about user",
                "operationId": "headUser",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of user to return",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "400": {
                        "description": "Invalid user ID",
                        "content": {}
                    },
                    "404": {
                        "description": "User not found",
                        "content": {}
                    }
                }
            }
        },
        "/comments": {
            "get": {
                "tags": [
                    "comments"
                ],
                "summary": "Get comments",
                "description": "This can only be done by the logged in user.",
                "operationId": "getComments",
                "responses": {
                    "default": {
                        "description": "successful operation",
                        "content": {}
                    }
                },
                "x-codegen-request-body-name": "body"
            },
            "post": {
                "tags": [
                    "comments"
                ],
                "summary": "Create comment",
                "description": "This can only be done by the logged in user.",
                "operationId": "createComment",
                "requestBody": {
                    "description": "Created Comment object",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Comment"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Comment"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Invalid comment supplied",
                        "content": {}
                    }
                },
                "x-codegen-request-body-name": "body"
            }
        },
        "/comments/{id}": {
            "get": {
                "tags": [
                    "comments"
                ],
                "summary": "Find comments by ID",
                "description": "Returns a single comment",
                "operationId": "getCommentById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of comment to return",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Comment"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid comment id supplied",
                        "content": {}
                    },
                    "404": {
                        "description": "Comment not found",
                        "content": {}
                    }
                }
            },
            "put": {
                "tags": [
                    "comments"
                ],
                "summary": "Updates comment",
                "description": "Updates comment.",
                "operationId": "putComment",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of comment that need to be updated",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Updated comment object",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CommentUpdate"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Comment updated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Comment"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Comment not found",
                        "content": {}
                    },
                    "422": {
                        "description": "Invalid comment supplied",
                        "content": {}
                    }
                }
            },
            "patch": {
                "tags": [
                    "comments"
                ],
                "summary": "Updates comment",
                "description": "Updates comment.",
                "operationId": "patchComment",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of comment that need to be updated",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Updated comment object",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CommentUpdate"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Comment updated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Comment"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Comment not found",
                        "content": {}
                    },
                    "422": {
                        "description": "Invalid comment supplied",
                        "content": {}
                    }
                }
            },
            "delete": {
                "tags": [
                    "comments"
                ],
                "summary": "Deletes a comment",
                "operationId": "deleteComment",
                "parameters": [
                    {
                        "name": "api_key",
                        "in": "header",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Comment id to delete",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Comment deleted",
                        "content": {}
                    },
                    "404": {
                        "description": "Comment not found",
                        "content": {}
                    }
                }
            },
            "head": {
                "tags": [
                    "comments"
                ],
                "summary": "Info about comment",
                "operationId": "headComment",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of comment to return",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "400": {
                        "description": "Invalid comment ID",
                        "content": {}
                    },
                    "404": {
                        "description": "Comment not found",
                        "content": {}
                    }
                }
            }
        },
        "/userpics": {
            "get": {
                "tags": [
                    "other"
                ],
                "summary": "Get user pictures",
                "operationId": "getUserPictures",
                "responses": {
                    "default": {
                        "description": "successful operation",
                        "content": {}
                    }
                },
                "x-codegen-request-body-name": "body"
            }
        },
        "/allimages": {
            "get": {
                "tags": [
                    "other"
                ],
                "summary": "Get articles pictures",
                "operationId": "getArticlesPictures",
                "responses": {
                    "default": {
                        "description": "successful operation",
                        "content": {}
                    }
                },
                "x-codegen-request-body-name": "body"
            }
        },
        "/restoreDB": {
            "get": {
                "tags": [
                    "other"
                ],
                "summary": "Restore DB",
                "operationId": "restoreDB",
                "responses": {
                    "default": {
                        "description": "successful operation",
                        "content": {}
                    }
                },
                "x-codegen-request-body-name": "body"
            }
        }
    },
    "components": {
        "schemas": {
            "Article": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "user_id": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "title": {
                        "type": "string",
                        "description": "Title"
                    },
                    "body": {
                        "type": "string",
                        "description": "Article body"
                    },
                    "date": {
                        "type": "string",
                        "format": "date"
                    },
                    "image": {
                        "type": "string",
                        "description": "Image path"
                    }
                },
                "xml": {
                    "name": "Article"
                }
            },
            "ArticleUpdate": {
                "type": "object",
                "properties": {
                    "title": {
                        "type": "string",
                        "description": "Title"
                    },
                    "body": {
                        "type": "string",
                        "description": "Article body"
                    },
                    "user_id": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "date": {
                        "type": "string",
                        "format": "date"
                    },
                    "image": {
                        "type": "string",
                        "description": "Image path"
                    }
                },
                "xml": {
                    "name": "Article"
                }
            },
            "Comment": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "article_id": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "user_id": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "body": {
                        "type": "string",
                        "description": "Comment body"
                    },
                    "date": {
                        "type": "string",
                        "format": "date"
                    }
                },
                "xml": {
                    "name": "Comment"
                }
            },
            "CommentUpdate": {
                "type": "object",
                "properties": {
                    "article_id": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "user_id": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "body": {
                        "type": "string",
                        "description": "Comment body"
                    },
                    "date": {
                        "type": "string",
                        "format": "date"
                    }
                },
                "xml": {
                    "name": "Comment"
                }
            },
            "User": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "email": {
                        "type": "string"
                    },
                    "firstname": {
                        "type": "string"
                    },
                    "lastname": {
                        "type": "string"
                    },
                    "password": {
                        "type": "string"
                    },
                    "avatar": {
                        "type": "string"
                    }
                },
                "xml": {
                    "name": "User"
                }
            },
            "UserUpdate": {
                "type": "object",
                "properties": {
                    "email": {
                        "type": "string"
                    },
                    "firstname": {
                        "type": "string"
                    },
                    "lastname": {
                        "type": "string"
                    },
                    "password": {
                        "type": "string"
                    },
                    "avatar": {
                        "type": "string"
                    }
                },
                "xml": {
                    "name": "User"
                }
            }
        }
    }
}